Question 1. Explain what JavaScript is and its role in web development.

    JavaScript is a high-level, dynamic programming language commonly used in web development. 
    It enables developers to create interactive and dynamic content on websites. JavaScript runs 
    in the browser, allowing it to interact with HTML and CSS to update content, control multimedia, 
    animate images, and manage data dynamically. Its role in web development includes:

    1. Interactivity: Enhancing user interfaces with features like sliders, forms, and dynamic content updates without needing to reload the page.
    2. Client-Side Validation: Checking user inputs on the client side before sending data to the server.
    3. Asynchronous Communication: Using AJAX (Asynchronous JavaScript and XML) to fetch data from the server without reloading the entire webpage, improving user experience.

Question 2: Explain the key differences between JavaScript and HTML. Provide examples of situations where
you would use each.

    HTML:
        1.Primarily used for structuring content on the web. It defines the layout and organization of web pages using elements like headings, paragraphs, lists, links, and images.
        2. Uses a markup syntax consisting of tags enclosed in angle brackets (<tagname>). Tags often come in pairs (<tagname> and </tagname>) to enclose content.
        3. Defines the structure and content of a webpage. It is the foundation upon which web pages are built.
    JavaScript :
        1. A programming language used to create dynamic and interactive elements on web pages. It adds functionality and behavior to the static content defined by HTML.
        2. Uses a scripting syntax with statements and expressions. It can be embedded within HTML or included as an external file.
        3. Enhances the webpage by adding interactivity, controlling multimedia, and managing data.

    HTML :Creating a Webpage Layout: Structuring a basic webpage with headers, paragraphs, images, and links.
        <html>
                <head>
                    <title>My Webpage</title>
                </head>
                <body>
                    <h1>Welcome to My Webpage</h1>
                    <p>This is a simple HTML example.</p>
                    <a href="https://example.com">Visit Example</a>
                    <form id="myForm">
                        <input type="text" id="name" value='name'/>
                    </form>
                </body>
                </html>
    Javascript : Form Validation - Ensuring that user input meets certain criteria before submitting a form

        document.getElementById("myForm").onsubmit = function() {
            var name = document.getElementById("name").value;
            if (name === "") {
                alert("Name must be filled out");
                return false;
            }
        };


Question 3: List and describe the five primitive data types in JavaScript.

    1. Number: Represents both integer and floating-point numbers. JavaScript does not differentiate between types of numbers (e.g., integers vs. decimals).
        let a =5;
    2. String: Represents a sequence of characters used for text. Strings are enclosed in single quotes ('), double quotes ("), or backticks (`) for template literals.
        let name = "Akash"
    3. Boolean: Represents a logical entity and can have only one of two values: true or false. Booleans are typically used in conditional statements.
        let isValid = false
    4. Undefined: Represents a variable that has been declared but has not yet been assigned a value. The default value of uninitialized variables is undefined.
        let x
    5. Null: Represents the intentional absence of any object value. It is a special keyword that denotes a null value.
        let a = null

Question 4: What is the purpose of declaring variables in JavaScript, and how do you declare them using the 'let' keyword?

    The purpose of declaring variables in JavaScript is to reserve a memory location for storing data values that
    can be used throughout a program. Variables act as placeholders for data, making it easier to work with and
    manipulate information in your code. Declaring variables allows you to:
    1. Store data : Variables can store various types of data, such as numbers, text, and objects.
    2. Manipulate data : You can perform operations on the data stored in variables, such as calculations, concatenations, and comparisons.
    3. Reuse of data : Variables enable you to reuse values at different points in your code, reducing redundancy.

    The let keyword is used to declare block-scoped variables, meaning the variable is only accessible within the block 
        
        let age; // Declaration
        age = 30; // Initialization

        let name = "John"; // Declaration and initialization


Question 5: Explain the importance of comments in JavaScript and provide examples of single-line and multi-line comments.

    Comments in JavaScript are essential for improving code readability and maintainability. They allow developers 
    to annotate their code with explanations, descriptions, and notes, which can be helpful for themselves and 
    others who might read or work on the code in the future.

    1. Clarifying Code: Explaining complex logic or sections of code, making it easier to understand.
    2. Documentation: Providing information about the purpose of functions, variables, and other code segments.
    3. Debugging: Temporarily disabling parts of code without deleting them, useful for testing and troubleshooting.
    4. Collaboration: Helping team members understand each other's code, facilitating collaboration and code reviews.

    Single-Line Comments:
        let sum = 10 + 20; // This calculates the sum of 10 and 20

    Multi-Line Comments:
        /*
        This function calculates the factorial of a number.
        It uses a recursive approach to find the result.
        */
        function factorial(n) {
            if (n <= 1) {
                return 1; // Base case: factorial of 1 or 0 is 1
            } else {
                return n * factorial(n - 1); // Recursive case
            }
        }



Question 6: Explain the importance of choosing meaningful and descriptive variable names in JavaScript. Provide an example where using a clear identifier improves code readability.

    Choosing meaningful and descriptive variable names in JavaScript is crucial for code readability and
    maintainability. Here are several reasons why it's important:
    1. Descriptive variable names make your code easier to read and understand. Developers
    (including yourself) can quickly grasp the purpose of a variable without needing to analyze the code in detail.
    2. Well-named variables reduce the chances of introducing bugs when modifying or
    extending code. You're less likely to misunderstand the variable's role and make incorrect changes.
    3. Descriptive variable names serve as a form of self-documentation. They convey the intent
    and context of the variable, reducing the need for additional comments.
    4. When working in teams, clear variable names facilitate communication among developers.
    Team members can understand each other's code more easily, leading to more efficient collaboration.
    5. Meaningful variable names help prevent errors caused by using the wrong variable or
    making incorrect assumptions about variable values.

    let length = 10;
    let width = 5;

    let length = 10;
    let width = 5;

